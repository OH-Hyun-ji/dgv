<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AdminMovieDAO">
<!-- 참여자테이블 매핑 -->
	<resultMap type="AdminActorVO" id="AdminActorVO">
		<result column="movie_actor_code" property="movie_actor_code" jdbcType="INTEGER"/>
		<result column="movie_actor_name" property="movie_actor_name" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap type="AdminGroupVO" id="AdminGroupVO">
		<result column="movie_group_code" property="movie_group_code" jdbcType="INTEGER"/>
		<result column="movie_group_name" property="movie_group_name" jdbcType="VARCHAR"/>
		<result column="reg_id" property="reg_id" jdbcType="VARCHAR"/>
		<result column="reg_date" property="reg_date" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap type="AdminParVO" id="AdminParVO">
		<result column="movie_par_num" property="movie_par_num" jdbcType="INTEGER"/>
		<result column="movie_num" property="movie_num" jdbcType="INTEGER" />
		<result column="movie_group" property="movie_group" jdbcType="INTEGER"/>
		<result column="movie_actor_code" property="movie_actor_code" jdbcType="INTEGER" />
		<result column="reg_id" property="reg_id" jdbcType="VARCHAR"/>
		<result column="reg_date" property="reg_date" jdbcType="VARCHAR"/>
		<collection property="groupList" resultMap="AdminGroupVO"></collection>
		<collection property="actorList" resultMap="AdminActorVO"></collection>
	</resultMap>
	<resultMap type="AdminRegionVO" id="AdminRegionVO">
		<result column="region_code" property="region_code" jdbcType="INTEGER" />
		<result column="city_code" property="city_code" jdbcType="INTEGER" />
		<result column="region_name" property="region_name" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap type="AdminTheaterVO" id="AdminTheaterVO">
		<result column="theater_code" property="theater_code" jdbcType="INTEGER" />
		<result column="theater_name" property="theater_name" jdbcType="VARCHAR" />
		<result column="theater_seat_count" property="theater_seat_count" jdbcType="INTEGER" />
		<result column="region_code" property="region_code" jdbcType="INTEGER" />
		<result column="theater_max_row" property="theater_max_row" jdbcType="INTEGER" />
		<result column="theater_max_column" property="theater_max_column" jdbcType="INTEGER" />
		<collection property="regionList" resultMap="AdminTheaterVO"></collection>
	</resultMap>
<!--close 참여자테이블 매핑   -->
	
	<insert id="InsertTheater" useGeneratedKeys="true" keyProperty="theater_code"  parameterType="AdminTheaterVO">
		INSERT INTO movie_theater(theater_code,theater_name,theater_seat_count,region_code,theater_max_row,theater_max_column)
		VALUES(DEFAULT,#{theater_name},#{theater_seat_count},#{region_code},#{theater_max_row},#{theater_max_column})
	</insert>
	<select id="SelectTheater" resultMap="AdminTheaterVO">
		SELECT * FROM movie_theater ORDER BY theater_code ASC;
	</select>
	<select id="theaterListInfo" resultType="AdminTheaterVO" parameterType="int">
		SELECT * FROM movie_theater WHERE theater_code=#{theater_code}
	</select>
	
	<select id="regionList" resultType="AdminRegionVO">
		SELECT * FROM dgv_region_info WHERE region_name =#{region_name}
	</select>
	<insert id="InsertPar" parameterType="AdminParVO">
		INSERT INTO movie_par(movie_par_num,movie_num,movie_group_code,movie_actor_code,reg_id,reg_date)
		VALUES(DEFAULT,#{movie_num},#{movie_group_code},#{movie_actor_code},#{reg_id},current_date)
	</insert>
	<select id="MovieList" resultType="AdminMovieVO">
		SELECT * FROM movie_info order by movie_num asc
	</select>
	
	<insert id="InsertMovie" useGeneratedKeys="true" keyProperty="movie_num" parameterType="AdminMovieVO">
		INSERT INTO movie_info(movie_num,movie_genre_code,movie_img,movie_running_time,movie_open_date,movie_text,movie_title,movie_title_en,movie_age_code,reg_id,reg_date,movie_real_img)
		VALUES(DEFAULT,#{movie_genre_code},#{movie_img},#{movie_running_time},#{movie_open_date},#{movie_text},#{movie_title},#{movie_title_en},#{movie_age_code},#{reg_id},current_date,#{movie_real_img})
	</insert>
	
	<select id="TheaterList" resultType="AdminTheaterVO" parameterType="int">
		SELECT * FROM movie_theater WHERE region_code = #{region_code}
	</select>
	
	<insert id="InsertCityTheater" parameterType="AdminCityTheaterVO">
		INSERT INTO city_region_theater(city_theater_code,movie_num,city_code,region_code,theater_code)
		VALUES(DEFAULT,#{movie_num},#{city_code},#{region_code},#{theater_code})
	</insert>

	<insert id="InsertTime" parameterType="AdminTimeVO">
		INSERT INTO movie_time(movie_time_code,region_code,theater_code,movie_time_start)
		VALUES(DEFAULT,#{region_code},#{theater_code},#{movie_time_start})
	</insert>
	
	<insert id="InsertSeat" parameterType="AdminSeatVO">
		INSERT INTO movie_seat(seat_code,region_code,seat_status,theater_code,seat_reservation)
		VALUES(DEFAULT,#{region_code},#{seat_status},#{theater_code},#{seat_reservation})
	</insert>
	
	<select id="TimeList" resultType="AdminTimeVO">
		SELECT * FROM movie_time WHERE region_code =#{region_code}		
	</select>
	
	<select id="TimecheckList" resultType="int">
		SELECT COUNT(*) FROM movie_time WHERE theater_code =#{theater_code}		
	</select>
	
	<delete id="deleteTheater" parameterType="AdminTheaterVO">
		DELETE FROM movie_theater WHERE theater_code =#{theater_code}
	</delete>
	
	<select id="selectMap" resultType="int">
		SELECT COUNT(*) FROM movie_map WHERE map_name=#{map_name}
	</select>
	
	<select id="beforeChartCheck" resultType="Integer" parameterType="UserReserveVO">
		SELECT COUNT(reserve_date) FROM movie_reserve WHERE reserve_date=#{rese_date}
	</select>
	
	<select id="areaChart" resultType="Integer">
		SELECT sum(reserve_price) FROM movie_reserve WHERE reserve_date=#{rese_date}
	</select>
	
	<select id="areaBarChart" resultType="int">
		SELECT sum(reserve_price) FROM movie_reserve WHERE reserve_date between #{start_day} AND #{end_day}
	</select>
	<update id="StatusChange">
		UPDATE movie_info SET movie_status = #{movie_status} WHERE movie_num = #{movie_num}  
	</update>
	<select id="continueMovie" resultType="AdminMovieVO">
		<![CDATA[
			select*from(
					select *,(row_number() over()) as rn1 from (
								select *,(row_number() over()) as rn from movie_info)as foo where rn <= #{pageNum} * #{amount})
											 as fd where rn1 > (#{pageNum}-1) * #{amount}  and movie_status ='true' ORDER BY movie_num asc
		]]>
	</select>
	<select id="endMovie" resultType="AdminMovieVO">
		<![CDATA[
			select*from(
					select *,(row_number() over()) as rn1 from (
								select *,(row_number() over()) as rn from movie_info)as foo where rn <= #{pageNum} * #{amount})
											 as fd where rn1 > (#{pageNum}-1) * #{amount}  and movie_status ='false' ORDER BY movie_num asc
		]]>
	</select>
	<select id="yetMovie" resultType="AdminMovieVO">
		<![CDATA[
			select*from(
					select *,(row_number() over()) as rn1 from (
								select *,(row_number() over()) as rn from movie_info)as foo where rn <= #{pageNum} * #{amount})
											 as fd where rn1 > (#{pageNum}-1) * #{amount}  and movie_status ='yet' ORDER BY movie_num asc
		]]>
	</select>
	<delete id="deleteMovie" parameterType="AdminMovieVO">
		DELETE FROM movie_info WHERE movie_num =#{movie_num}
	</delete>
	
	<select id="bestMovieList" resultType="UserReserveVO">
		select movie_num, TO_CHAR(trunc(AVG(reserve_price)),'$999,999,999')as fomatter_price
				from movie_reserve
						group by movie_num
								order by 2 desc;
	</select>
	
	<select id="totalPeopleCount" resultType="UserReserveVO">
		select movie_num ,a1 +a2 +a3 as total_people from(
				select movie_num , sum(reserve_basic) as a1, sum(reserve_old) as a2, sum(reserve_student) as a3
				from movie_reserve
				group by movie_num
				having movie_num = movie_num)as foo;
	</select>
	
	<select id="BarChartGenreInfo" resultType="AdminMovieVO">
		select foo.movie_genre_code, count(*) as genre_count from(
		select mi.movie_num ,dgi.movie_genre_code 
			from movie_info mi 
				inner join movie_reserve ms 
				on mi.movie_num = ms.movie_num 
				inner join movie_genre_info dgi
				on mi.movie_genre_code = dgi.movie_genre_code)as foo
																	group by foo.movie_genre_code
																	order by foo.movie_genre_code asc; 
		
	</select>
	
	<select id="beforeGenreCount"  resultType="Integer" parameterType="AdminGenreVO">
		SELECT COUNT(movie_genre_name)
		
	</select>
	
	<select id="totalMyMoney" resultType="UserReserveVO">			
			SELECT to_char(SUM(reserve_price),'$999,999,999') as fomatter_price
			FROM movie_reserve;				
	</select>
</mapper>